<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FacialRecognition</name>
    </assembly>
    <members>
        <member name="T:Emgu.CV.EigenObjectRecognizer">
            <summary>
            An object recognizer using PCA (Principle Components Analysis)
            </summary>
        </member>
        <member name="P:Emgu.CV.EigenObjectRecognizer.EigenImages">
            <summary>
            Get the eigen vectors that form the eigen space
            </summary>
            <remarks>The set method is primary used for deserialization, do not attemps to set it unless you know what you are doing</remarks>
        </member>
        <member name="P:Emgu.CV.EigenObjectRecognizer.Labels">
            <summary>
            Get or set the labels for the corresponding training image
            </summary>
        </member>
        <member name="P:Emgu.CV.EigenObjectRecognizer.EigenDistanceThreshold">
            <summary>
            Get or set the eigen distance threshold.
            The smaller the number, the more likely an examined image will be treated as unrecognized object. 
            Set it to a huge number (e.g. 5000) and the recognizer will always treated the examined image as one of the known object. 
            </summary>
        </member>
        <member name="P:Emgu.CV.EigenObjectRecognizer.AverageImage">
            <summary>
            Get the average Image. 
            </summary>
            <remarks>The set method is primary used for deserialization, do not attemps to set it unless you know what you are doing</remarks>
        </member>
        <member name="P:Emgu.CV.EigenObjectRecognizer.EigenValues">
            <summary>
            Get the eigen values of each of the training image
            </summary>
            <remarks>The set method is primary used for deserialization, do not attemps to set it unless you know what you are doing</remarks>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}[],Emgu.CV.Structure.MCvTermCriteria@)">
            <summary>
            Create an object recognizer using the specific tranning data and parameters, it will always return the most similar object
            </summary>
            <param name="images">The images used for training, each of them should be the same size. It's recommended the images are histogram normalized</param>
            <param name="termCrit">The criteria for recognizer training</param>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}[],System.String[],Emgu.CV.Structure.MCvTermCriteria@)">
            <summary>
            Create an object recognizer using the specific tranning data and parameters, it will always return the most similar object
            </summary>
            <param name="images">The images used for training, each of them should be the same size. It's recommended the images are histogram normalized</param>
            <param name="labels">The labels corresponding to the images</param>
            <param name="termCrit">The criteria for recognizer training</param>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}[],System.String[],System.Double,Emgu.CV.Structure.MCvTermCriteria@)">
            <summary>
            Create an object recognizer using the specific tranning data and parameters
            </summary>
            <param name="images">The images used for training, each of them should be the same size. It's recommended the images are histogram normalized</param>
            <param name="labels">The labels corresponding to the images</param>
            <param name="eigenDistanceThreshold">
            The eigen distance threshold, (0, ~1000].
            The smaller the number, the more likely an examined image will be treated as unrecognized object. 
            If the threshold is &lt; 0, the recognizer will always treated the examined image as one of the known object. 
            </param>
            <param name="termCrit">The criteria for recognizer training</param>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.CalcEigenObjects(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}[],Emgu.CV.Structure.MCvTermCriteria@,Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Single}[]@,Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Single}@)">
            <summary>
            Caculate the eigen images for the specific traning image
            </summary>
            <param name="trainingImages">The images used for training </param>
            <param name="termCrit">The criteria for tranning</param>
            <param name="eigenImages">The resulting eigen images</param>
            <param name="avg">The resulting average image</param>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.EigenDecomposite(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte},Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Single}[],Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Single})">
            <summary>
            Decompose the image as eigen values, using the specific eigen vectors
            </summary>
            <param name="src">The image to be decomposed</param>
            <param name="eigenImages">The eigen images</param>
            <param name="avg">The average images</param>
            <returns>Eigen values of the decomposed image</returns>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.EigenProjection(System.Single[])">
            <summary>
            Given the eigen value, reconstruct the projected image
            </summary>
            <param name="eigenValue">The eigen values</param>
            <returns>The projected image</returns>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.GetEigenDistances(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte})">
            <summary>
            Get the Euclidean eigen-distance between <paramref name="image"/> and every other image in the database
            </summary>
            <param name="image">The image to be compared from the training images</param>
            <returns>An array of eigen distance from every image in the training images</returns>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.FindMostSimilarObject(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte},System.Int32@,System.Single@,System.String@)">
            <summary>
            Given the <paramref name="image"/> to be examined, find in the database the most similar object, return the index and the eigen distance
            </summary>
            <param name="image">The image to be searched from the database</param>
            <param name="index">The index of the most similar object</param>
            <param name="eigenDistance">The eigen distance of the most similar object</param>
            <param name="label">The label of the specific image</param>
        </member>
        <member name="M:Emgu.CV.EigenObjectRecognizer.Recognize(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte})">
            <summary>
            Try to recognize the image and return its label
            </summary>
            <param name="image">The image to be recognized</param>
            <returns>
            String.Empty, if not recognized;
            Label of the corresponding image, otherwise
            </returns>
        </member>
        <member name="F:FacialRecognition.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FacialRecognition.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FacialRecognition.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FacialRecognition.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="F:FacialRecognition.Recognizer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FacialRecognition.Recognizer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FacialRecognition.Recognizer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FacialRecognition.StartScreen.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FacialRecognition.StartScreen.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FacialRecognition.StartScreen.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FacialRecognition.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.Emgu_CV">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.Emgu_CV_GPU">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.Emgu_CV_ML">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.Emgu_CV_UI">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.Emgu_Util">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:FacialRecognition.Properties.Resources.haarcascade_frontalface_default">
              IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
            
              By downloading, copying, installing or using the software you agree to this license.
              If you do not agree to this license, do not download, install,
              copy or use the software.   
             Intel License Agreeme [rest of string was truncated]&quot;;.
        </member>
    </members>
</doc>
